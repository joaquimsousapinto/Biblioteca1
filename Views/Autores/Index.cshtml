@model PagedList.IPagedList<Biblioteca1.Models.Autor>
@using Biblioteca1.Models
@using PagedList;
@using PagedList.Mvc;
@{
    ViewData["Title"] = "Lista de Autores";
    string q = @Request.QueryString["q"];
}
<div class="border-bottom pt-4 pb-2 mb-3">
    <div class="row">
        <div class="col-md-8">
            <h2><i class="fa fa-user-o text-danger"></i> @ViewBag.Title</h2>
        </div>
        <div class="col-md-4">
            <form>
                <input type="hidden" name="page" value="1" />
                <div class="input-group input-group-sm">
                    <input class="form-control form-control-sm" type="text" name="q" value="@q" placeholder="Insira o nome (ou parte) do utilizador" />
                    <div class="input-group-append">
                        <button type="submit" class="btn btn-default btn-sm" title="Filtrar"><i class="fa fa-search small"></i></button>
                        <a href="@Url.Action("Index")" class="btn btn-default btn-sm" title="Limpar o filtro"><i class="fa fa-times"></i></a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@if (Model.Count() > 0)
{
    <div class="row">
        <div class="col-sm-1">
            <a href="@Url.Action("Create")" class="btn btn-default btn-sm" title="Criar Novo"><i class="fa fa-plus"></i></a>
        </div>
        <div class="col-sm-3 small">
            @Html.Raw(String.Format("Página: {0} de {1}", (Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber), Model.PageCount))<br />
            @Html.Raw(String.Format("Entradas: {0}-{1} de {2}", (Model.PageNumber - 1) * Model.PageSize + 1, (Model.TotalItemCount > Model.PageNumber * Model.PageSize ? Model.PageNumber * Model.PageSize : Model.TotalItemCount), Model.TotalItemCount))
        </div>
        <div class="col-sm-8 small">
            @if (Model.PageCount > 1)
            {
                @Html.PagedListPager(Model, page => Url.Action("Index",
                    new { q, page }),
                    new PagedListRenderOptions { LinkToFirstPageFormat = "&#8676;", LinkToPreviousPageFormat = "&#8592;", DisplayLinkToPreviousPage = PagedListDisplayMode.Never, LinkToNextPageFormat = "&#8594;", DisplayLinkToNextPage = PagedListDisplayMode.Never, LinkToLastPageFormat = "&#8677;", ContainerDivClasses = new[] { "pagination justify-content-end small" }, LiElementClasses = new[] { "page-item" }, MaximumPageNumbersToDisplay = 6 })
            }

        </div>
    </div>
    <table class="table table-striped table-sm align-middle">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.First().Nome)</th>
                <th>@Html.DisplayNameFor(model => model.First().DataNascimento)</th>
                <th>@Html.DisplayNameFor(model => model.First().DataMorte)</th>
                <th class="text-center">@Html.DisplayNameFor(model => model.First().LivroAutors)</th>
                <th></th>
            </tr>
        </thead>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Nome)</td>
                <td>@Html.DisplayFor(modelItem => item.DataNascimento)</td>
                <td>@Html.DisplayFor(modelItem => item.DataMorte)</td>
                <td class="text-center">@Html.DisplayFor(modelItem => item.LivroAutors.Count)</td>
                <td class="text-end">
                    <a class="btn btn-sm btn-default" href="@Url.Action("Edit", new { id = item.Id })"><i class="fa fa-pencil"></i></a>
                    <a class="btn btn-sm btn-default" href="@Url.Action("Details", new { id = item.Id })"><i class="fa fa-eye"></i></a>
                    @if (item.LivroAutors.Count == 0)
                    {
                        <a class="btn btn-sm btn-default" href="@Url.Action("Delete", new { id = item.Id })"><i class="fa fa-trash-o"></i></a>
                    }
                    else
                    {
                        <span class="btn btn-sm btn-default" title="Editora associada com livros.&#10;Não pode ser apagada."><i class="fa fa-times text-danger"></i></span>
                    }
                </td>
            </tr>
        }

    </table>
}
else
{
    <p><i class="fa fa-info-circle text-info"></i> Não há registos para representar</p>
}
@Html.Partial("_ToastStatus")
@section Scripts {
    <script>
        $('document').ready(function () {
            $(".toast").toast('show');
        });
    </script>
}
